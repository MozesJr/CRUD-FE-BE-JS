{"remainingRequest":"D:\\Belajar\\student-crud\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!D:\\Belajar\\student-crud\\frontend\\src\\views\\EditStudent.vue?vue&type=style&index=0&id=063a17f2&lang=css","dependencies":[{"path":"D:\\Belajar\\student-crud\\frontend\\src\\views\\EditStudent.vue","mtime":1719985669688},{"path":"D:\\Belajar\\student-crud\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1719891016149},{"path":"D:\\Belajar\\student-crud\\frontend\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1719891016280},{"path":"D:\\Belajar\\student-crud\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1719891016180},{"path":"D:\\Belajar\\student-crud\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1719891016531},{"path":"D:\\Belajar\\student-crud\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1719891016195}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQovKiBZb3VyIENTUyBzdHlsZXMgKi8NCg=="},{"version":3,"sources":["D:\\Belajar\\student-crud\\frontend\\src\\views\\EditStudent.vue"],"names":[],"mappings":";AAmGA,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC","file":"D:/Belajar/student-crud/frontend/src/views/EditStudent.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div>\r\n    <h1>Edit Student</h1>\r\n    <form @submit.prevent=\"updateStudent\">\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">Name:</label>\r\n        <input type=\"text\" id=\"name\" v-model=\"name\" class=\"form-control\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"studentId\">Student ID:</label>\r\n        <input type=\"text\" id=\"studentId\" v-model=\"studentId\" class=\"form-control\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"major\">Major:</label>\r\n        <select id=\"major\" v-model=\"major\" class=\"form-control\" required>\r\n          <option v-for=\"major in majors\" :key=\"major._id\" :value=\"major._id\">{{ major.name }}</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"gender\">Gender:</label>\r\n        <select id=\"gender\" v-model=\"gender\" class=\"form-control\" required>\r\n          <option value=\"Male\">Male</option>\r\n          <option value=\"Female\">Female</option>\r\n        </select>\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-primary\">Update Student</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      name: '',\r\n      studentId: '',\r\n      major: '',\r\n      gender: '',\r\n      majors: []\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchStudent();\r\n    this.fetchMajors();\r\n  },\r\n  methods: {\r\n    async fetchStudent() {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/students/${this.$route.params.id}`);\r\n        const student = response.data;\r\n        this.name = student.name;\r\n        this.studentId = student.studentId;\r\n        this.major = student.major._id;\r\n        this.gender = student.gender;\r\n      } catch (error) {\r\n        console.error('Error fetching student:', error);\r\n      }\r\n    },\r\n    async fetchMajors() {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/majors');\r\n        this.majors = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching majors:', error);\r\n      }\r\n    },\r\n    async updateStudent() {\r\n      try {\r\n        const updatedStudent = {\r\n          name: this.name,\r\n          studentId: this.studentId,\r\n          major: this.major,\r\n          gender: this.gender\r\n        };\r\n        await axios.put(`http://localhost:5000/api/students/${this.$route.params.id}`, updatedStudent);\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Success',\r\n          text: 'Student has been updated successfully!'\r\n        }).then(() => {\r\n          this.$router.push({ name: 'Home' });\r\n        });\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: 'Failed to update student!'\r\n        });\r\n        console.error('Error updating student:', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Your CSS styles */\r\n</style>\r\n"]}]}